{

  function flat(pred) {
    return function(val) {
      if (pred(val)) {
        return val;
      }
      else {
        throw "contract violation";
      }
    };
  };

  function isNumber(x) {
    return typeof(x) == "number";
  }
  
  function isString(x) {
    return typeof(x) == "string";
  }
}

thunk :: -> isNumber;
add1 :: isNumber -> isNumber;
sub1 :: isNumber -> isNumber;
thunk2 :: -> isString;
add :: isNumber isNumber -> isNumber;
div :: isNumber function(x) { x != 0; } -> isNumber;
makeCoords :: isNumber isNumber -> { x: isNumber, y: isNumber };

{
  function a(x) {
    return false; // lol
  }

  b = a;
}


map :: (a -> b) -> list -> list;
