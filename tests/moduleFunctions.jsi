{

  function isNumber(x) {
    return typeof(x) == "number";
  }
  
  function isString(x) {
    return typeof(x) == "string";
  }

  function isBool(x) { // perhaps overly strict, but great for testing
    return x === true || x === false;
  }

  function any(x) { return true; }

  function isArray(x) { return x instanceof Array; }
}

coords = { x : isNumber, 
           y : isNumber,
           moveRight : -> :coords
         };

thunk :: -> isNumber;
add1 :: isNumber -> isNumber;
sub1Broken :: isNumber -> isNumber;
add :: isNumber isNumber -> isNumber;
div :: isNumber function(x) { return x != 0; } -> isNumber;
makeCoords :: isNumber isNumber -> :coords;

filter :: (any -> isBool) isArray -> isArray;
curry :: (isNumber isNumber -> isNumber) isNumber -> isNumber -> isNumber;
